# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - master
    - releases/*
    - feature/*
    exclude:
    - releases/old*
    - feature/*-working
  paths:
    include:
    - '*'
    exclude:
    - '.github/*'
    - '*.md'

pr:
  autoCancel: true
  branches:
    include:
    - '*' 

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
    - releases/*
    exclude:
    - releases/ancient/*
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - releases/*
  always: true

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Personal SonarCloud'
    organization: 'jboliveira-github'
    scannerMode: 'MSBuild'
    projectKey: 'jboliveira_PoC.SharpDiff'
    projectName: 'PoC.SharpDiff'

- script: dotnet build -c $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test $(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.Resources.Tests/PoC.SharpDiff.Resources.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.Resources.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.Resources.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.Resources.Tests $(buildConfiguration)'

- script: dotnet test $(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/PoC.SharpDiff.WebAPI.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.WebAPI.Tests $(buildConfiguration)'

- script: dotnet test $(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.Tests/PoC.SharpDiff.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(System.DefaultWorkingDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.Tests $(buildConfiguration)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: PublishTestResults@1
  inputs:
    testRunner: VSTest
    testResultsFiles: '$(System.DefaultWorkingDirectory)/tests/*.Tests/BuildReports/UnitTests/*.trx'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/tests/*.Tests/BuildReports/Coverage/*.xml'