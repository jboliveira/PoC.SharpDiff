# PoC.SharpDiff Pipelines

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

trigger:
  branches:
    include:
    - master
    - releases/*
    - feature/*
    exclude:
    - releases/old*
    - feature/*-working
  paths:
    include:
    - '*'
    exclude:
    - '.github/*'
    - '*.md'

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
    - releases/*
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - releases/*
  always: true

pr:
  autoCancel: true
  branches:
    include:
    - '*'

steps:
- task: SonarCloudPrepare@1
  displayName: 'SonarCloud Prepare'
  inputs:
    SonarCloud: 'Personal SonarCloud'
    organization: 'jboliveira-github'
    scannerMode: 'MSBuild'
    projectKey: 'jboliveira_PoC.SharpDiff'
    projectName: 'PoC.SharpDiff'
    extraProperties: |
      sonar.cs.vstest.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.trx
      sonar.cs.xunit.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.xml
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/tests/*.Resources.Tests/BuildReports/Coverage/coverage.opencover.xml,$(Build.SourcesDirectory)/tests/*.WebAPI.Tests/BuildReports/Coverage/coverage.opencover.xml
      sonar.cs.opencover.it.reportsPaths=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/Coverage/coverage.opencover.xml

- task: DotNetCoreCLI@2
  displayName: 'dotnet build PoC.SharpDiff.sln $(buildConfiguration)'
  continueOnError: false
  inputs:
    command: 'build'
    configuration: $(buildConfiguration)

- script: dotnet test $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Resources.Tests/PoC.SharpDiff.Resources.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Resources.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Resources.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.Resources.Tests $(buildConfiguration)'
  continueOnError: false

- script: dotnet test $(Build.SourcesDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/PoC.SharpDiff.WebAPI.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(Build.SourcesDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.WebAPI.Tests $(buildConfiguration)'
  continueOnError: false

- script: dotnet test $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/PoC.SharpDiff.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.Tests $(buildConfiguration)'
  continueOnError: false

- task: SonarCloudAnalyze@1
  displayName: 'SonarCloud Analyze'
  continueOnError: false

- task: SonarCloudPublish@1
  displayName: 'SonarCloud Publish'
  continueOnError: false
  inputs:
    pollingTimeoutSec: '300'

- task: PublishTestResults@1
  displayName: 'Azure - Publish Test Results'
  continueOnError: false
  inputs:
    testRunner: VSTest
    testResultsFiles: '$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.trx'

- task: PublishCodeCoverageResults@1
  displayName: 'Azure - Publish Code Coverage Results'
  continueOnError: false
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/Coverage/*.xml'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish PoC.SharpDiff.sln $(buildConfiguration)'
  continueOnError: false
  inputs:
    command: 'publish'
    publishWebProjects: true
    configuration: $(buildConfiguration)

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  continueOnError: false
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/**/**/*.csproj'
    nobuild: true
    includesymbols: true
    includesource: true
    versioningScheme: 'byBuildNumber'