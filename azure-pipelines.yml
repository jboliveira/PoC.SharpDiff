# PoC.SharpDiff Pipelines

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

trigger:
  branches:
    include:
    - master
    - releases/*
    - feature/*
    exclude:
    - releases/old*
    - feature/*-working
  paths:
    include:
    - '*'
    exclude:
    - '.github/*'
    - '*.md'

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
    - releases/*
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - releases/*
  always: true

pr:
  autoCancel: true
  branches:
    include:
    - '*' 

steps:
- task: SonarCloudPrepare@1
  condition: and(failed(), and(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))
  inputs:
    SonarCloud: 'Personal SonarCloud'
    organization: 'jboliveira-github'
    scannerMode: 'MSBuild'
    projectKey: 'jboliveira_PoC.SharpDiff'
    projectName: 'PoC.SharpDiff'
    extraProperties: |
      sonar.branch.name=$(Build.SourceBranchName)
      sonar.cs.vstest.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.trx
      sonar.cs.xunit.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.xml
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/tests/*.Resources.Tests/BuildReports/Coverage/coverage.opencover.xml,$(Build.SourcesDirectory)/tests/*.WebAPI.Tests/BuildReports/Coverage/coverage.opencover.xml
      sonar.cs.opencover.it.reportsPaths=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/Coverage/coverage.opencover.xml

- task: SonarCloudPrepare@1
  condition: and(succeeded(), and(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))
  continueOnError: false
  inputs:
    SonarCloud: 'Personal SonarCloud'
    organization: 'jboliveira-github'
    scannerMode: 'MSBuild'
    projectKey: 'jboliveira_PoC.SharpDiff'
    projectName: 'PoC.SharpDiff'
    extraProperties: |
      sonar.pullrequest.provider=github
      sonar.pullrequest.github.repository=jboliveira/PoC.SharpDiff
      sonar.pullrequest.key=$(System.PullRequest.PullRequestId)
      sonar.cs.vstest.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.trx
      sonar.cs.xunit.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.xml
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/tests/*.Resources.Tests/BuildReports/Coverage/coverage.opencover.xml,$(Build.SourcesDirectory)/tests/*.WebAPI.Tests/BuildReports/Coverage/coverage.opencover.xml
      sonar.cs.opencover.it.reportsPaths=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/Coverage/coverage.opencover.xml

- task: SonarCloudPrepare@1
  condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))
  inputs:
    SonarCloud: 'Personal SonarCloud'
    organization: 'jboliveira-github'
    scannerMode: 'MSBuild'
    projectKey: 'jboliveira_PoC.SharpDiff'
    projectName: 'PoC.SharpDiff'
    extraProperties: |
      sonar.pullrequest.provider=github
      sonar.pullrequest.github.repository=jboliveira/PoC.SharpDiff
      sonar.pullrequest.key=$(System.PullRequest.PullRequestId)
      sonar.cs.vstest.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.trx
      sonar.cs.xunit.reportsPaths=$(Build.SourcesDirectory)/tests/*.Tests/BuildReports/UnitTests/*.xml
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/tests/*.Resources.Tests/BuildReports/Coverage/coverage.opencover.xml,$(Build.SourcesDirectory)/tests/*.WebAPI.Tests/BuildReports/Coverage/coverage.opencover.xml
      sonar.cs.opencover.it.reportsPaths=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/Coverage/coverage.opencover.xml

- script: dotnet build -c $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
  continueOnError: false

- script: dotnet test $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Resources.Tests/PoC.SharpDiff.Resources.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Resources.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Resources.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.Resources.Tests $(buildConfiguration)'
  continueOnError: false

- script: dotnet test $(Build.SourcesDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/PoC.SharpDiff.WebAPI.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(Build.SourcesDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.WebAPI.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.WebAPI.Tests $(buildConfiguration)'
  continueOnError: false

- script: dotnet test $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/PoC.SharpDiff.Tests.csproj -c $(buildConfiguration) --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory $(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/tests/PoC.SharpDiff.Tests/BuildReports/Coverage/ "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[xunit.*]*"
  displayName: 'dotnet test PoC.SharpDiff.Tests $(buildConfiguration)'
  continueOnError: false

- task: SonarCloudAnalyze@1
  continueOnError: false

- task: SonarCloudPublish@1
  continueOnError: false
  inputs:
    pollingTimeoutSec: '300'

- task: PublishTestResults@1
  continueOnError: false
  inputs:
    testRunner: VSTest
    testResultsFiles: '$(System.DefaultWorkingDirectory)/tests/*.Tests/BuildReports/UnitTests/*.trx'

- task: PublishCodeCoverageResults@1
  continueOnError: false
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/tests/*.Tests/BuildReports/Coverage/*.xml'
